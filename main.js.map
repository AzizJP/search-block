{"version":3,"file":"main.js","mappings":"86BAAO,IAAMA,EAASC,GACpB,SAAAD,EAAYE,EAAcC,GAAe,IAAAC,EAAA,M,4FAAAC,CAAA,KAAAL,GAAAM,EAAA,wBAKvB,SAAAC,GAChB,IAAMC,EAAeD,EAAaE,YAAYA,YAC9CD,EAAaE,MAAMC,QAAU,SAC7BH,EAAaI,YAAcL,EAAaM,iBAC1C,IAACP,EAAA,0BAEmB,SAAAC,GAClB,IAAMC,EAAeD,EAAaE,YAAYA,YAC9CD,EAAaE,MAAMC,QAAU,OAC7BH,EAAaI,YAAc,EAC7B,IAACN,EAAA,iBAEU,SAAAQ,GACT,OAAOA,EAAQC,SAASC,KAC1B,IAACV,EAAA,0BAEmB,WAClBF,EAAKa,kBAAkBb,EAAKc,eAE5Bd,EAAKc,cAAcC,oBAAoB,QAASf,EAAKgB,kBACvD,IAACd,EAAA,yBAEkB,WAUjB,OATAF,EAAKiB,aAAeC,SAASC,cAAc,IAADC,OAAKpB,EAAKqB,gBACpDrB,EAAKc,cAAgBd,EAAKiB,aAAaE,cAAc,IAADC,OAAKpB,EAAKsB,iBAEzDtB,EAAKuB,SAASvB,EAAKc,gBACtBd,EAAKwB,gBAAgBxB,EAAKc,eAG5Bd,EAAKyB,qBAEEzB,EAAKuB,SAASvB,EAAKc,cAC5B,IAACZ,EAAA,2BAEoB,WACnBF,EAAKc,cAAcY,iBAAiB,QAAS1B,EAAKgB,kBACpD,IAzCEW,KAAKN,cAAgBvB,EACrB6B,KAAKL,eAAiBvB,CACxB,I,mqBCJK,IAAM6B,EAAG,WACd,SAAAA,EAAYC,I,4FAAK5B,CAAA,KAAA2B,GACfD,KAAKG,KAAOD,EACZF,KAAKI,SAAW,CACd,OAAU,8BAEd,C,QAiBC,O,EAjBAH,G,EAAA,EAAAI,IAAA,iBAAAC,MAED,SAAeC,GACb,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADlB,OAAYc,EAAIK,QACvC,GAAC,CAAAP,IAAA,sBAAAC,MAED,SAAoBO,GAClB,OAAOC,MAAM,GAADrB,OACPO,KAAKG,KAAI,OAAAV,OAAMoB,EAAI,oCACtB,CACEE,OAAQ,MACRC,QAAShB,KAAKI,WAEhBa,KAAKjB,KAAKkB,eACd,M,oEAACjB,CAAA,CAvBa,G,25BCAT,IAAMkB,EAAIjD,GACf,SAAAiD,EAAAC,EAAAC,GAA2D,IAAAhD,EAAA,KAA7CiD,EAAQF,EAARE,SAAcC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,e,4FAAalD,CAAA,KAAA6C,GAAA5C,EAAA,uBAQtC,SAAAkD,GACfpD,EAAKqD,WAAWC,OAAOtD,EAAKuD,UAAUH,GACxC,IAAClD,EAAA,oBAEa,SAAAsD,GACQ,IAAhBA,EAAKC,OACPvC,SAASC,cAAc,IAADC,OAAKpB,EAAK0D,iBAAkBlD,YAAc,oBAEhEU,SAASC,cAAc,IAADC,OAAKpB,EAAK0D,iBAAkBpD,MAAMC,QAAU,OAGpEiD,EAAKG,MAAM,EAAG,IAAIC,SAAQ,SAAAR,GACxBpD,EAAK6D,eAAeT,EACtB,GACF,IArBEzB,KAAK4B,UAAYN,EACjBtB,KAAKmC,cAAgBZ,EACrBvB,KAAK+B,eAAiBP,EAEtBxB,KAAK0B,WAAanC,SAASC,cAAc,IAADC,OAAKO,KAAKmC,eACpD,ICPWC,EAAmB,SAACC,EAAKC,EAAgBC,EAAiBC,GACrE,IAAIC,EAAWJ,EAAM,GAGrB,OAAiB,IAAbI,EAAuBH,EAEvBG,GAAY,GAAKA,GAAY,EAAUF,EAEGC,CAGhD,E,25BCTO,IAAME,EAAUxE,GACrB,SAAAwE,EAAYC,EAAYC,GAAe,IAAAvE,EAAA,M,4FAAAC,CAAA,KAAAoE,GAAAnE,EAAA,+BAKd,WAKvB,OAJ0BgB,SACvBC,cAAc,IAADC,OAAKpB,EAAKwE,cACvBC,QAAQtD,cAAc,IAADC,OAAKpB,EAAK0E,iBAC/BC,WAAU,EAEf,IAACzE,EAAA,yBAEkB,SAAA0E,GAajB,OAZA5E,EAAK6E,aAAe,IAAIC,KAAKF,GAC7B5E,EAAK+E,SAAW,IAAID,KACpB9E,EAAKgF,gBAAkBC,KAAKC,IAAIlF,EAAK+E,SAASI,UAAYnF,EAAK6E,aAAaM,WAC5EnF,EAAKoF,UAAYH,KAAKI,KAAKrF,EAAKgF,gBAAkB,OAClDhF,EAAKsF,aAAeL,KAAKM,MAAMvF,EAAKoF,UAAY,KAChDpF,EAAKwF,cAAgBP,KAAKM,MAAOvF,EAAKoF,UAAY,IAAO,IACzDpF,EAAKyF,YAAezF,EAAKoF,UAAY,IAAO,GAE5CpF,EAAK0F,OAAS3B,EAAiB/D,EAAKsF,aAAc,MAAO,OAAQ,OACjEtF,EAAK2F,QAAU5B,EAAiB/D,EAAKwF,cAAe,QAAS,SAAU,WACvExF,EAAK4F,MAAQ7B,EAAiB/D,EAAKyF,YAAa,OAAQ,MAAO,QAErC,IAAtBzF,EAAKsF,cAA6C,IAAvBtF,EAAKwF,cAC3B,GAAPpE,OAAUpB,EAAKyF,YAAW,KAAArE,OAAIpB,EAAK4F,MAAK,UAEhB,IAAtB5F,EAAKsF,aACA,GAAPlE,OAAUpB,EAAKwF,cAAa,KAAApE,OAAIpB,EAAK2F,QAAO,KAAAvE,OAAIpB,EAAKyF,YAAW,KAAArE,OAAIpB,EAAK4F,MAAK,UAEzE,GAAPxE,OAAUpB,EAAKsF,aAAY,KAAAlE,OAAIpB,EAAK0F,OAAM,KAAAtE,OAAIpB,EAAKwF,cAAa,KAAApE,OAAIpB,EAAK2F,QAAO,KAAAvE,OAAIpB,EAAKyF,YAAW,KAAArE,OAAIpB,EAAK4F,MAAK,SACpH,IAAC1F,EAAA,2BAEoB,SAAA6C,EAAAC,GAWhB,IAVD6C,EAAS9C,EAAT8C,UAAWC,EAAQ/C,EAAR+C,SAAUC,EAAUhD,EAAVgD,WAAYC,EAAUjD,EAAViD,WAAYC,EAAKlD,EAALkD,MAE7CC,EAAYlD,EAAZkD,aACAC,EAASnD,EAATmD,UACAC,EAASpD,EAAToD,UACAC,EAAarD,EAAbqD,cACAC,EAAiBtD,EAAjBsD,kBACAC,EAAmBvD,EAAnBuD,oBACAC,EAAiBxD,EAAjBwD,kBAsBF,OAnBAxG,EAAKyG,mBAAqBzG,EAAK0G,yBAC/B1G,EAAK2G,aAAe3G,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAK8E,IAC9DlG,EAAK4G,oBAAsB5G,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAK+E,IACrEnG,EAAK6G,oBAAsB7G,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAKgF,IACrEpG,EAAK8G,cAAgB9G,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAKiF,IAC/DrG,EAAK+G,kBAAoB/G,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAKkF,IACnEtG,EAAKgH,oBAAsBhH,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAKmF,IACrEvG,EAAKiH,kBAAoBjH,EAAKyG,mBAAmBtF,cAAc,IAADC,OAAKoF,IAEnExG,EAAK2G,aAAanG,YAAcqF,EAChC7F,EAAK2G,aAAaO,KAAOpB,EACzB9F,EAAK4G,oBAAoBpG,YAAc,WAAHY,OAAcpB,EAAKmH,iBAAiBpB,IACxE/F,EAAK6G,oBAAoBrG,YAAc,aAAHY,OAAgBpB,EAAKmH,iBAAiBnB,IAE1EhG,EAAK8G,cAAcI,KAAOjB,EAAMH,SAChC9F,EAAK+G,kBAAkBvG,YAAcyF,EAAMmB,MAC3CpH,EAAKgH,oBAAoBK,IAAMpB,EAAMqB,WACrCtH,EAAKiH,kBAAkBzG,YAAc,GAAHY,OAAM6E,EAAMsB,KAAI,KAE3CvH,EAAKyG,kBACd,IAlEE9E,KAAK6C,YAAcF,EACnB3C,KAAK+C,eAAiBH,CACxB,I,25BCNK,IAAMiD,EAAM3H,GACjB,SAAA2H,EAAYC,GAAgB,IAAAzH,EAAA,M,4FAAAC,CAAA,KAAAuH,GAAAtH,EAAA,wBAIV,WAKhB,OAHqBF,EAAKiB,aAAaE,cAAc,kBAChCc,KAGvB,IAAC/B,EAAA,sBAEe,SAAAwH,GACdA,EAAIC,iBAEJ3H,EAAK4H,gBAAgB5H,EAAK6H,kBAC5B,IAAC3H,EAAA,0BAEmB,WAClBF,EAAKiB,aAAeC,SAASC,cAAc,iBAE3CnB,EAAKiB,aAAaS,iBAAiB,SAAU1B,EAAK8H,cACpD,IArBEnG,KAAKiG,gBAAkBH,CACzB,ICaWM,EAAsB,CACjC7B,aAAc,mBACdC,UAAW,UACXC,UAAW,UACXC,cAAe,oBACfC,kBAAmB,yBACnBC,oBAAqB,2BACrBC,kBAAmB,0BCXfwB,EAAM,IAAIpG,EAAI,8CAEdqG,EAAY,IAAIrI,EDbN,eACC,iBCiCXsI,EAAyB,SAAAjG,GAE3Bf,SAASC,cAAc,IAADC,ODlCR,mBCkC6CZ,YADzDyB,EACuE,OAEA,OAE7E,EAOMuB,EAAO,IAAIV,EAAK,CAAEG,SALG,SAAAkF,GAEzB,OADmB,IAAI9D,EDhCX,OACG,cCgCG+D,mBAAmBD,EAAMJ,EAC7C,GDxC6B,CAC3B7E,aAAc,OACdC,cAAe,gBC8CjB,IAAIqE,GAtCuB,SAAAhF,GACTyF,EAAUI,qBAExBH,GAAuB,GACvBF,EACGM,oBAAoB9F,GACpBI,MAAK,SAAAV,GA4Be,IAAAqG,IA3BArG,EAAIqG,MA4BtB/E,EAAKgF,YAAYD,EA3BpB,IAAE,OACK,SAAAE,GACLP,GAAuB,GACvBQ,QAAQC,IAAIF,EACd,IAAE,SACO,WACPP,GAAuB,EACzB,IAEN,IAqB+BU,mB","sources":["webpack://search-block/./src/Validator/Validator.js","webpack://search-block/./src/components/Api/Api.js","webpack://search-block/./src/components/List/List.js","webpack://search-block/./src/components/Repository/Repository.helpers.js","webpack://search-block/./src/components/Repository/Repository.js","webpack://search-block/./src/components/Search/Search.js","webpack://search-block/./src/components/Page/Page.constants.js","webpack://search-block/./src/components/Page/Page.js"],"sourcesContent":["export class Validator {\n  constructor(formSelector, inputSelector) {\n    this._formSelector = formSelector;\n    this._inputSelector = inputSelector;\n  }\n\n  _showInputError = inputElement => {\n    const errorElement = inputElement.nextSibling.nextSibling;\n    errorElement.style.display = 'inline';\n    errorElement.textContent = inputElement.validationMessage;\n  };\n\n  _deleteInputError = inputElement => {\n    const errorElement = inputElement.nextSibling.nextSibling;\n    errorElement.style.display = 'none';\n    errorElement.textContent = '';\n  };\n\n  _isValid = element => {\n    return element.validity.valid;\n  };\n\n  _handleInputEvent = () => {\n    this._deleteInputError(this._inputElement);\n\n    this._inputElement.removeEventListener('input', this._handleInputEvent);\n  };\n\n  enableValidation = () => {\n    this._formElement = document.querySelector(`.${this._formSelector}`);\n    this._inputElement = this._formElement.querySelector(`.${this._inputSelector}`);\n\n    if (!this._isValid(this._inputElement)) {\n      this._showInputError(this._inputElement);\n    }\n\n    this._setEventListeners();\n\n    return this._isValid(this._inputElement);\n  };\n\n  _setEventListeners = () => {\n    this._inputElement.addEventListener('input', this._handleInputEvent);\n  };\n}\n","export class Api {\n  constructor(url) {\n    this._url = url;\n    this._headers = {\n      'Accept': 'application/vnd.github+json',\n    };\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getRepositoryByName(name) {\n    return fetch(\n      `${this._url}?q=${name} in:name,description per_page=10`,\n      {\n        method: 'GET',\n        headers: this._headers,\n      },\n    ).then(this._checkResponse);\n  }\n}\n","export class List {\n  constructor({ renderer }, { listSelector, titleSelector }) {\n    this._renderer = renderer;\n    this._listSelector = listSelector;\n    this._titleSelector = titleSelector;\n\n    this._container = document.querySelector(`.${this._listSelector}`);\n  }\n\n  _addRepository = repository => {\n    this._container.append(this._renderer(repository));\n  };\n\n  renderItems = list => {\n    if (list.length === 0) {\n      document.querySelector(`.${this._titleSelector}`).textContent = 'Ничего не найдено';\n    } else {\n      document.querySelector(`.${this._titleSelector}`).style.display = 'none';\n    }\n\n    list.slice(0, 10).forEach(repository => {\n      this._addRepository(repository);\n    });\n  };\n}\n","export const changeWordEnding = (num, wordForOneItem, wordForTwoItems, wordForFiveItems) => {\n  let remain10 = num % 10;\n  let remain100 = num % 100;\n\n  if (remain10 === 1) return wordForOneItem;\n\n  if (remain10 >= 2 && remain10 <= 4) return wordForTwoItems;\n\n  if (remain100 >= 5 && remain100 <= 20) return wordForFiveItems;\n\n  return wordForFiveItems;\n};\n","import { changeWordEnding } from './Repository.helpers';\n\nexport class Repository {\n  constructor(templateId, cloneSelector) {\n    this._templateId = templateId;\n    this._cloneSelector = cloneSelector;\n  }\n\n  _getRepositoryTemplate = () => {\n    const repositoryElement = document\n      .querySelector(`#${this._templateId}`)\n      .content.querySelector(`.${this._cloneSelector}`)\n      .cloneNode(true);\n    return repositoryElement;\n  };\n\n  _timePassedSince = stringDate => {\n    this._initialDate = new Date(stringDate);\n    this._dateNow = new Date();\n    this._dateDifference = Math.abs(this._dateNow.getTime() - this._initialDate.getTime());\n    this._diffDays = Math.ceil(this._dateDifference / (1000 * 3600 * 24));\n    this._yearsPassed = Math.floor(this._diffDays / 360);\n    this._monthsPassed = Math.floor((this._diffDays % 360) / 30);\n    this._daysPassed = (this._diffDays % 360) % 30;\n\n    this._years = changeWordEnding(this._yearsPassed, 'год', 'года', 'лет');\n    this._months = changeWordEnding(this._monthsPassed, 'месяц', 'месяца', 'месяцев');\n    this._days = changeWordEnding(this._daysPassed, 'день', 'дня', 'дней');\n\n    if (this._yearsPassed === 0 && this._monthsPassed === 0) {\n      return `${this._daysPassed} ${this._days} назад`;\n    }\n    if (this._yearsPassed === 0) {\n      return `${this._monthsPassed} ${this._months} ${this._daysPassed} ${this._days} назад`;\n    }\n    return `${this._yearsPassed} ${this._years} ${this._monthsPassed} ${this._months} ${this._daysPassed} ${this._days} назад`;\n  };\n\n  generateRepository = (\n    { full_name, html_url, created_at, updated_at, owner },\n    {\n      nameSelector,\n      createdId,\n      updatedId,\n      ownerSelector,\n      ownerNameSelector,\n      ownerAvatarSelector,\n      ownerTypeSelector,\n    },\n  ) => {\n    this._repositoryElement = this._getRepositoryTemplate();\n    this._nameElement = this._repositoryElement.querySelector(`.${nameSelector}`);\n    this._createdDateElement = this._repositoryElement.querySelector(`#${createdId}`);\n    this._updatedDateElement = this._repositoryElement.querySelector(`#${updatedId}`);\n    this._ownerElement = this._repositoryElement.querySelector(`.${ownerSelector}`);\n    this._ownerNameElement = this._repositoryElement.querySelector(`.${ownerNameSelector}`);\n    this._ownerAvatarElement = this._repositoryElement.querySelector(`.${ownerAvatarSelector}`);\n    this._ownerTypeElement = this._repositoryElement.querySelector(`.${ownerTypeSelector}`);\n\n    this._nameElement.textContent = full_name;\n    this._nameElement.href = html_url;\n    this._createdDateElement.textContent = `Создан: ${this._timePassedSince(created_at)}`;\n    this._updatedDateElement.textContent = `Обновлён: ${this._timePassedSince(updated_at)}`;\n\n    this._ownerElement.href = owner.html_url;\n    this._ownerNameElement.textContent = owner.login;\n    this._ownerAvatarElement.src = owner.avatar_url;\n    this._ownerTypeElement.textContent = `${owner.type}:`;\n\n    return this._repositoryElement;\n  };\n}\n","export class Search {\n  constructor(submitCallback) {\n    this._submitCallback = submitCallback;\n  }\n\n  _getInputValues = () => {\n    let value = '';\n    const inputElement = this._formElement.querySelector('.search__field');\n    value = inputElement.value;\n\n    return value;\n  };\n\n  _handleSubmit = evt => {\n    evt.preventDefault();\n\n    this._submitCallback(this._getInputValues());\n  };\n\n  setEventListeners = () => {\n    this._formElement = document.querySelector('.search__form');\n\n    this._formElement.addEventListener('submit', this._handleSubmit);\n  };\n}\n","export const formSelectors = {\n  formSelector: 'search__form',\n  inputSelector: 'search__field',\n  buttonSelector: 'search__button',\n};\n\nexport const listSelectors = {\n  listSelector: 'list',\n  titleSelector: 'list__title',\n};\n\nexport const templateSelectors = {\n  templateId: 'list',\n  cloneSelector: 'repository',\n};\n\nexport const repositorySelectors = {\n  nameSelector: 'repository__name',\n  createdId: 'created',\n  updatedId: 'updated',\n  ownerSelector: 'repository__owner',\n  ownerNameSelector: 'repository__owner-name',\n  ownerAvatarSelector: 'repository__owner-avatar',\n  ownerTypeSelector: 'repository__owner-type',\n};\n","import { Validator } from '../../Validator/Validator';\nimport { Api } from '../Api/Api';\nimport { List } from '../List/List';\nimport { Repository } from '../Repository/Repository';\nimport { Search } from '../Search/Search';\nimport {\n  formSelectors,\n  listSelectors,\n  repositorySelectors,\n  templateSelectors,\n} from './Page.constants';\n\nconst api = new Api('https://api.github.com/search/repositories');\n\nconst validator = new Validator(formSelectors.formSelector, formSelectors.inputSelector);\n\nconst searchRepositoties = name => {\n  const isValid = validator.enableValidation();\n  if (isValid) {\n    handleRequestingChange(true);\n    api\n      .getRepositoryByName(name)\n      .then(res => {\n        renderRepositories(res.items);\n      })\n      .catch(err => {\n        handleRequestingChange(false);\n        console.log(err);\n      })\n      .finally(() => {\n        handleRequestingChange(false);\n      });\n  }\n};\n\nconst handleRequestingChange = value => {\n  if (value) {\n    document.querySelector(`.${formSelectors.buttonSelector}`).textContent = 'Ищем';\n  } else {\n    document.querySelector(`.${formSelectors.buttonSelector}`).textContent = 'Поиск';\n  }\n};\n\nconst generateRepository = item => {\n  const repository = new Repository(templateSelectors.templateId, templateSelectors.cloneSelector);\n  return repository.generateRepository(item, repositorySelectors);\n};\n\nconst list = new List({ renderer: generateRepository }, listSelectors);\n\nconst renderRepositories = items => {\n  return list.renderItems(items);\n};\n\nnew Search(searchRepositoties).setEventListeners();\n"],"names":["Validator","_createClass","formSelector","inputSelector","_this","_classCallCheck","_defineProperty","inputElement","errorElement","nextSibling","style","display","textContent","validationMessage","element","validity","valid","_deleteInputError","_inputElement","removeEventListener","_handleInputEvent","_formElement","document","querySelector","concat","_formSelector","_inputSelector","_isValid","_showInputError","_setEventListeners","addEventListener","this","Api","url","_url","_headers","key","value","res","ok","json","Promise","reject","status","name","fetch","method","headers","then","_checkResponse","List","_ref","_ref2","renderer","listSelector","titleSelector","repository","_container","append","_renderer","list","length","_titleSelector","slice","forEach","_addRepository","_listSelector","changeWordEnding","num","wordForOneItem","wordForTwoItems","wordForFiveItems","remain10","Repository","templateId","cloneSelector","_templateId","content","_cloneSelector","cloneNode","stringDate","_initialDate","Date","_dateNow","_dateDifference","Math","abs","getTime","_diffDays","ceil","_yearsPassed","floor","_monthsPassed","_daysPassed","_years","_months","_days","full_name","html_url","created_at","updated_at","owner","nameSelector","createdId","updatedId","ownerSelector","ownerNameSelector","ownerAvatarSelector","ownerTypeSelector","_repositoryElement","_getRepositoryTemplate","_nameElement","_createdDateElement","_updatedDateElement","_ownerElement","_ownerNameElement","_ownerAvatarElement","_ownerTypeElement","href","_timePassedSince","login","src","avatar_url","type","Search","submitCallback","evt","preventDefault","_submitCallback","_getInputValues","_handleSubmit","repositorySelectors","api","validator","handleRequestingChange","item","generateRepository","enableValidation","getRepositoryByName","items","renderItems","err","console","log","setEventListeners"],"sourceRoot":""}